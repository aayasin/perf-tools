usage: do.py command [command ..] [options]

positional arguments:
  command               setup-perf log profile analyze tar, all (for these 5)
                        supported options: all analyze build build-perf clean
                        eventlist-update find-perf git-log-oneline help
                        install-python log profile prof-no-mux reboot setup-
                        all setup-perf sync-date tar tools-update version
                        enable-aslr disable-aslr suspend-aslr enable-atom
                        disable-atom suspend-atom enable-fix-freq disable-fix-
                        freq suspend-fix-freq enable-hugepages disable-
                        hugepages suspend-hugepages enable-prefetches disable-
                        prefetches suspend-prefetches enable-smt disable-smt
                        suspend-smt

optional arguments:
  -h, --help            show this help message and exit
  --perf PERF           use a custom perf tool (default: perf)
  --pmu-tools PMU_TOOLS
                        use a custom pmu-tools (default: /usr/bin/python
                        ./pmu-tools)
  --toplev-args TOPLEV_ARGS
                        arguments to pass-through to toplev (default:
                        --frequency --metric-group +Summary)
  --events EVENTS, -e EVENTS
                        user events to pass to perf-stat's -e (default: None)
  --metrics METRICS, -m METRICS
                        user metrics to pass to perf-stat's -M (default: None)
  --nodes NODES, -n NODES
                        user metrics to pass to toplev's --nodes (default: +Lo
                        ad_Miss_Real_Latency,+L2MPKI,+ILP,+IpTB,+IpMispredict,
                        +UopPI,+IpAssist)
  -r REPEAT, --repeat REPEAT
                        times to run per-app counting and topdown-primary
                        profile steps (default: 3)
  -a APP, --app APP     name of user-application/kernel/command to profile
                        (default: ./run.sh)
  -v VERBOSE, --verbose VERBOSE
                        verbose level; -1: quiet; 0:info, 1:commands,
                        2:+verbose-on metrics|build|sub-commands, 3:+toplev
                        --perf|ASM on kernel build|greedy lbr.py, 4:+args
                        parsing, 5:+event-groups, 6:ocperf verbose, ..
                        9:anything (default: 0)
  -pm PROFILE_MASK, --profile-mask PROFILE_MASK
                        mask to control stages in the profile command. See
                        profile-mask-help.md for details (default: 12607)
  --mode [{profile,process,both}]
                        analysis mode options: profile-only, (post)process-
                        only or both (default: both)
  --install-perf [INSTALL_PERF]
                        perf tool installation options: [install]|patch|build
                        (default: None)
  --print-only          print the commands without running them (default:
                        False)
  --stdout              keep profiling unfiltered results in stdout (default:
                        False)
  --power               collect power metrics/events as well (default: False)
  -d DELAY, --delay DELAY
                        delay profiling for x seconds. disabled by default
                        (default: 0)
  -s SYS_WIDE, --sys-wide SYS_WIDE
                        system-wide profiling for x seconds. disabled by
                        default (default: 0)
  -o OUTPUT, --output OUTPUT
                        basename to use for output files (default: None)
  -g GEN_ARGS, --gen-args GEN_ARGS
                        args to gen-kernel.py (default: None)
  -ki APP_ITERATIONS, --app-iterations APP_ITERATIONS
                        num-iterations of kernel (default: 1e9)

environment variables: FORCECPU - force a specific CPU all over e.g. SPR, spr.
