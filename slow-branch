#!/usr/bin/env python
# A tool that extracts slow sequences using Timed-LBR output of perf-script
# Author: Ahmad Yasin
# edited: March 2024
#
# Sample usage: perf script -i lbr.perf.data -F +brstackinsn --xed | grep -E '^\s+[0-9a-f]+\s.*#'
#                 | sed -E 's/\[[0-9]+\]//' | sort | uniq -c | sort -n | ./slow-branch
#
from __future__ import print_function
__author__ = 'ayasin'

import re, sys

while True:
  line = sys.stdin.readline()
  if not line: break
  r = re.match(r'^\s+(\d+)[^#]+# \S+ (\d+) cycles (?: ([0-9\.]+) IPC)?', line)
  if 0: print('DEBUG', r.groups(), line)
  if not r:
    #       2    ffffffff8daaa59c                        jmp 0xffffffff8e9e9484                  # PRED
    # keep line first to get it reported if piped to ptage
    print('%s ## Line does not conform to expected syntax by slow-branch' % line.rstrip())
    continue
  ipc = float(r.group(3)) if r.group(3) and r.group(3) != '0.00' else None
  cost = int(r.group(1)) * ((1 / ipc) if ipc else (float(r.group(2)) if r.group(2) else 99))
  print('%7.1f\t' % round(cost, 1), line, end='')
